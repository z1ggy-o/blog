(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{336:function(e,t,o){"use strict";o.r(t);var a=o(7),i=Object(a.a)({},(function(){var e=this,t=e._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h2",{attrs:{id:"motivation"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#motivation"}},[e._v("#")]),e._v(" Motivation")]),e._v(" "),t("p",[e._v("Large-scale distributed applications require different forms of coordination.")]),e._v(" "),t("p",[e._v("Usually, people develop services for each of the different coordination needs. As a result, developers are constrained to a fixed set of primitives.")]),e._v(" "),t("h2",{attrs:{id:"contribution"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#contribution"}},[e._v("#")]),e._v(" Contribution")]),e._v(" "),t("ul",[t("li",[e._v("Exposes APIs that enables application developers to implement their own primitives, without changes to the service core.")]),e._v(" "),t("li",[e._v("Achieve high performance by relaxing consistency guarantees")])]),e._v(" "),t("h2",{attrs:{id:"solution"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#solution"}},[e._v("#")]),e._v(" Solution")]),e._v(" "),t("p",[e._v("ZooKeeper provides to its clients the abstraction of a set of data nodes (znodes). These data nodes are organized like a traditional file system.")]),e._v(" "),t("p",[e._v("ZooKeeper provides a set of simplified APIs to access these data nodes. Application develops can use these APIs to implement different forms of coordination that they want.")]),e._v(" "),t("p",[e._v("ZooKeeper servers use an atomic broadcast protocol, Zab (similar to Raft) to sync state between each other.")]),e._v(" "),t("p",[e._v("It is vague about how to implement ZooKeeper. However, since it is an open source project, the source code is always available.")]),e._v(" "),t("p",[e._v("In short, ZooKeeper guarantees correct coordination with high performance through:")]),e._v(" "),t("ul",[t("li",[e._v("Using wait-free data objects instead of blocking.")]),e._v(" "),t("li",[e._v("FIFO client ordering of all operations.")]),e._v(" "),t("li",[e._v("Linearizing all writes to the leader, then propagate to other servers (they call this A-linearizability).")]),e._v(" "),t("li",[e._v("Read locally. Can have stale data, however, much faster.")]),e._v(" "),t("li",[e._v("Asynchronous enables batching to reduce networking and storage I/O overhead.")])]),e._v(" "),t("h2",{attrs:{id:"main-finding-of-the-paper"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#main-finding-of-the-paper"}},[e._v("#")]),e._v(" Main finding of the paper")]),e._v(" "),t("ul",[t("li",[e._v("Abstraction of basic building components can help create more general systems.")]),e._v(" "),t("li",[e._v("ZooKeeper is one of the best examples that shows us how to weak consistency in favor of higher performance.")])])])}),[],!1,null,null,null);t.default=i.exports}}]);